---
- name: Deploy MovieApp containers
  hosts: movieapp_servers
  become: yes
  vars:
    frontend_image: "{{ docker_registry }}/movieapp-frontend:{{ build_number }}"
    backend_image: "{{ docker_registry }}/movieapp-backend:{{ build_number }}"

  tasks:
    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
      become: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Login to Docker Registry
      docker_login:
        registry_url: "https://index.docker.io/v1/"
        username: "{{ lookup('env', 'DOCKER_CREDS_USR') }}"
        password: "{{ lookup('env', 'DOCKER_CREDS_PSW') }}"
      no_log: true  # Hide sensitive information

    - name: Pull Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      loop:
        - "{{ frontend_image }}"
        - "{{ backend_image }}"

    - name: Stop and Remove Old Containers
      docker_container:
        name: "{{ item }}"
        state: absent
      loop:
        - movieapp-frontend
        - movieapp-backend

    - name: Run Frontend container
      docker_container:
        name: movieapp-frontend
        image: "{{ frontend_image }}"
        state: started
        restart_policy: always
        ports:
          - "80:3000"

    - name: Run Backend container
      docker_container:
        name: movieapp-backend
        image: "{{ backend_image }}"
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
        env:
          DATABASE_URL: "mongodb+srv://username:password@cluster0.ekd0ilq.mongodb.net/movieapp"
          API_KEY: "cccd7d7b"
